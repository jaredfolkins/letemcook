package partials

import (
       "fmt"
       "github.com/jaredfolkins/letemcook/models"
       "github.com/jaredfolkins/letemcook/paths"
)

templ Navtop(v models.BaseView) {
        {{ var activeApps, activeCookbooks, activeAccount, activeSystem string }}
        {{ var activeAccountSettings, activeAccountUsers, activeAccountJobs string }}
        {{ var activeSystemSettings, activeSystemAccounts, activeSystemImages, activeSystemJobs string }}
	if v.ActiveNav == "apps" {
		{{ activeApps = "active" }}
	} else if v.ActiveNav == "cookbooks" {
		{{ activeCookbooks = "active" }}
	} else if v.ActiveNav == "account" {
		{{ activeAccount = "active" }}
        } else if v.ActiveNav == "system" {
                {{ activeSystem = "active" }}
        }

        if v.ActiveSubNav == paths.AccountSettings {
                {{ activeAccountSettings = "active" }}
        } else if v.ActiveSubNav == paths.AccountUsers {
                {{ activeAccountUsers = "active" }}
        } else if v.ActiveSubNav == paths.AccountJobs {
                {{ activeAccountJobs = "active" }}
        } else if v.ActiveSubNav == paths.SystemSettings {
                {{ activeSystemSettings = "active" }}
        } else if v.ActiveSubNav == paths.SystemAccounts {
                {{ activeSystemAccounts = "active" }}
        } else if v.ActiveSubNav == paths.SystemImages {
                {{ activeSystemImages = "active" }}
        } else if v.ActiveSubNav == paths.SystemJobs {
                {{ activeSystemJobs = "active" }}
        }
	if v.IsSetup {
		{{ return }}
	}
	if !v.UserContext.IsAuthenticated() {
		if v.RegistrationEnabled {
			<a
				hx-target="#app"
				hx-swap="innerHTML transition:true"
                               hx-push-url={ string(fmt.Sprintf("%s?squid=%s&account=%s", paths.Register, v.AccountSquid, v.AccountName)) }
                               href={ templ.URL(fmt.Sprintf("%s?squid=%s&account=%s&partial=true", paths.Register, v.AccountSquid, v.AccountName)) }
				class="btn btn-primary rounded-none text-lg m-1"
			>
				Register
			</a>
		}
		<a
			hx-target="#app"
			hx-swap="innerHTML transition:true"
                       hx-push-url={ string(fmt.Sprintf("%s?squid=%s&account=%s", paths.Login, v.AccountSquid, v.AccountName)) }
                       href={ templ.URL(fmt.Sprintf("%s?squid=%s&account=%s&partial=true", paths.Login, v.AccountSquid, v.AccountName)) }
			class="btn btn-primary rounded-none text-lg m-1"
		>
			Login
		</a>
	} else {
		// --- Full navigation for medium screens and up ---
		<div class="hidden navbreak:flex items-center">
			if v.ShowAppsNav {
				<a
					hx-target="#app"
					hx-swap="innerHTML transition:true"
                                        hx-push-url={ paths.Apps }
                                        href={ templ.URL(paths.Apps + "?partial=true") }
					class={ fmt.Sprintf("btn btn-primary rounded-none text-lg m-1 %s", activeApps) }
                                hx-on:click="document.body.dataset.activeNav='apps'; document.body.dataset.activeSubNav=''; htmx.trigger('body', 'refreshNavtop')"
				>
					Apps
				</a>
			}
			if v.ShowCookbooksNav {
				<a
					hx-target="#app"
					hx-swap="innerHTML transition:true"
                                        hx-push-url={ paths.Cookbooks }
                                        href={ templ.URL(paths.Cookbooks + "?partial=true") }
					class={ fmt.Sprintf("btn btn-primary rounded-none text-lg m-1 %s", activeCookbooks) }
                                        hx-on:click="document.body.dataset.activeNav='cookbooks'; document.body.dataset.activeSubNav=''; htmx.trigger('body', 'refreshNavtop')"
				>
					Cookbooks
				</a>
			}
			if v.ShowAccountNav {
				<div class="dropdown dropdown-bottom dropdown-end rounded-none">
					<div tabindex="0" role="button" class={ fmt.Sprintf("btn btn-primary text-lg rounded-none m-1 %s", activeAccount) }>Account</div>
					<ul tabindex="0" class="dropdown-content menu bg-primary z-[1] w-52 p-2 shadow m-1">
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                             hx-push-url={ paths.AccountSettings }
                                                             href={ templ.URL(paths.AccountSettings + "?partial=true") }
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeAccountSettings) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='account'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.AccountSettings)) }
							>
								Settings
							</a>
						</li>
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                             hx-push-url={ paths.AccountUsers }
                                                             href={ templ.URL(paths.AccountUsers + "?partial=true") }
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeAccountUsers) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='account'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.AccountUsers)) }
							>
								Users
							</a>
						</li>
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                            hx-push-url={ paths.AccountJobs }
                                                            href={ templ.URL(paths.AccountJobs + "?partial=true") }
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeAccountJobs) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='account'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.AccountJobs)) }
							>
								Jobs
							</a>
						</li>
					</ul>
				</div>
			}
			if v.ShowSystemNav {
				<div class="dropdown dropdown-bottom dropdown-end rounded-none">
					<!--<div tabindex="0" role="button" class="btn m-1">{ v.UserContext.Username() }</div> -->
					<div tabindex="0" role="button" class={ fmt.Sprintf("btn btn-primary text-lg rounded-none m-1 %s", activeSystem) }>System</div>
					<ul tabindex="0" class="dropdown-content menu bg-primary z-[1] w-52 p-2 shadow m-1">
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                            hx-push-url={ paths.SystemSettings }
								href="/lemc/system/settings?partial=true"
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeSystemSettings) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemSettings)) }
							>
								Settings
							</a>
						</li>
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                            hx-push-url={ paths.SystemAccounts }
                                                            href={ templ.URL(paths.SystemAccounts + "?partial=true") }
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeSystemAccounts) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemAccounts)) }
							>
								Accounts
							</a>
						</li>
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                            hx-push-url={ paths.SystemImages }
                                                            href={ templ.URL(paths.SystemImages + "?partial=true") }
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeSystemImages) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemImages)) }
							>
								Images
							</a>
						</li>
						<li>
							<a
								hx-target="#app"
								hx-swap="innerHTML transition:true"
                                                            hx-push-url={ paths.SystemJobs }
                                                            href={ templ.URL(paths.SystemJobs + "?partial=true") }
                                                                class={ fmt.Sprintf("btn btn-ghost rounded-none text-lg %s", activeSystemJobs) }
                                                                hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemJobs)) }
							>
								Jobs
							</a>
						</li>
					</ul>
				</div>
			}
			<div class="dropdown dropdown-bottom dropdown-end rounded-none">
				<!--<div tabindex="0" role="button" class="btn m-1">{ v.UserContext.Username() }</div> -->
				<div tabindex="0" role="button" class="btn btn-primary text-lg rounded-none m-1">{ v.UserContext.Username() }</div>
				<ul tabindex="0" class="dropdown-content menu bg-primary z-[1] w-52 p-2 shadow m-1">
					<li>
						<a
							hx-target="#app"
							hx-swap="innerHTML transition:true"
                                                       hx-push-url={ paths.Profile }
                                                       href={ templ.URL(paths.Profile + "?partial=true") }
							class="btn btn-ghost rounded-none text-lg"
						>
							Profile
						</a>
					</li>
					<li>
						<a
							hx-confirm="Are you sure you'd like to logout?"
							hx-swap="innerHTML transition:true"
                                                       hx-post={ paths.Logout }
							hx-target="#app"
                                                       hx-push-url={ string(fmt.Sprintf("%s?squid=%s&account=%s", paths.Login, v.AccountSquid, v.AccountName)) }
							class="btn btn-ghost rounded-none text-lg"
						>
							Logout
						</a>
					</li>
				</ul>
			</div>
		</div>
		// --- Hamburger Menu for small screens ---
		<div class="flex navbreak:hidden dropdown dropdown-end">
			<button tabindex="0" class="btn btn-ghost rounded-none">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
			</button>
			<ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-primary rounded-box w-52">
				if v.ShowAppsNav {
                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.Apps } href={ templ.URL(paths.Apps + "?partial=true") } class={ activeApps } hx-on:click="document.body.dataset.activeNav='apps'; document.body.dataset.activeSubNav=''; htmx.trigger('body', 'refreshNavtop')">Apps</a></li>
				}
				if v.ShowCookbooksNav {
                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.Cookbooks } href={ templ.URL(paths.Cookbooks + "?partial=true") } class={ activeCookbooks } hx-on:click="document.body.dataset.activeNav='cookbooks'; document.body.dataset.activeSubNav=''; htmx.trigger('body', 'refreshNavtop')">Cookbooks</a></li>
				}
				if v.ShowAccountNav {
					<li>
						<a class={ activeAccount }>Account</a>
						<ul class="p-2">
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.AccountSettings } href={ templ.URL(paths.AccountSettings + "?partial=true") } class={ activeAccountSettings } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='account'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.AccountSettings)) }>Settings</a></li>
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.AccountUsers } href={ templ.URL(paths.AccountUsers + "?partial=true") } class={ activeAccountUsers } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='account'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.AccountUsers)) }>Users</a></li>
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.AccountJobs } href={ templ.URL(paths.AccountJobs + "?partial=true") } class={ activeAccountJobs } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='account'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.AccountJobs)) }>Jobs</a></li>
						</ul>
					</li>
				}
				if v.ShowSystemNav {
					<li>
						<a class={ activeSystem }>System</a>
						<ul class="p-2">
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.SystemSettings } href={ templ.URL(paths.SystemSettings + "?partial=true") } class={ activeSystemSettings } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemSettings)) }>Settings</a></li>
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.SystemAccounts } href={ templ.URL(paths.SystemAccounts + "?partial=true") } class={ activeSystemAccounts } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemAccounts)) }>Accounts</a></li>
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.SystemImages } href={ templ.URL(paths.SystemImages + "?partial=true") } class={ activeSystemImages } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemImages)) }>Images</a></li>
                                                    <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.SystemJobs } href={ templ.URL(paths.SystemJobs + "?partial=true") } class={ activeSystemJobs } hx-on:click={ templ.JSUnsafeFuncCall(fmt.Sprintf("document.body.dataset.activeNav='system'; document.body.dataset.activeSubNav='%s'; htmx.trigger('body', 'refreshNavtop')", paths.SystemJobs)) }>Jobs</a></li>
						</ul>
					</li>
				}
				<li>
					<a>{ v.UserContext.Username() }</a>
					<ul class="p-2">
                                               <li><a hx-target="#app" hx-swap="innerHTML transition:true" hx-push-url={ paths.Profile } href={ templ.URL(paths.Profile + "?partial=true") }>Profile</a></li>
                                                <li><a hx-confirm="Are you sure you'd like to logout?" hx-swap="innerHTML transition:true" hx-post={ paths.Logout } hx-target="#app" hx-push-url={ string(fmt.Sprintf("%s?squid=%s&account=%s", paths.Login, v.AccountSquid, v.AccountName)) }>Logout</a></li>
					</ul>
				</li>
			</ul>
		</div>
	}
}
