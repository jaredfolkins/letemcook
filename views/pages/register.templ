package pages

import (
	"fmt"
	"github.com/jaredfolkins/letemcook/models"
	"github.com/jaredfolkins/letemcook/views/layout"
)

templ Register(v models.RegisterView) {
	<section class="card rounded-none w-fit bg-base-100 mx-auto mb-8 edges">
		<div class="card-body pb-2">
			<h1 class="card-title border-b border-b-slate-600 pb-[4px]">
				Register
			</h1>
			<form
				hx-post={ string(fmt.Sprintf("/lemc/register?squid=%s&account=%s", v.BaseView.AccountSquid, v.BaseView.AccountName)) }
				hx-target="#app"
				hx-swap="innerHTML"
				class="drop-shadow-xl flex flex-col gap-4 p-12 rounded-none"
			>
				<label class="flex flex-col justify-start gap-2">
					Email:
					<input
						class="input input-bordered bg-white input-primary rounded-none"
						type="email"
						name="email"
						required
						autofocus
						disabled?={ v.BaseView.IsProtected }
						if v.BaseView.IsProtected {
							value="disabled"
						}
					/>
				</label>
				<label class="flex flex-col justify-start gap-2">
					Username:
					<input
						class="input input-bordered bg-white input-primary rounded-none"
						type="text"
						name="username"
						required
						autofocus
						disabled?={ v.BaseView.IsProtected }
						if v.BaseView.IsProtected {
							value="disabled"
						}
					/>
				</label>
				<label class="flex flex-col justify-start gap-2 relative">
					Password:
					<input
						class="input input-bordered bg-white input-primary rounded-none"
						type="password"
						name="password"
						required
						minlength="6"
						disabled?={ v.BaseView.IsProtected }
						if v.BaseView.IsProtected {
							value="disabled"
						}
					/>
					<button
						title="View password"
						type="button"
						disabled?={ v.BaseView.IsProtected }
						class="absolute top-12 right-3 rounded-none"
						_="on click if [type of previous <input/>] == 'password' then remove [@type=password] from previous <input/> then hide #eye then remove .hidden from #eye-slash else show #eye then add .hidden to #eye-slash then tell previous <input/> toggle [@type=password] end"
					>
						<svg id="eye" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
							<path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"></path>
							<path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"></path>
						</svg>
						<svg id="eye-slash" class="hidden" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
							<path d="m10.79 12.912-1.614-1.615a3.5 3.5 0 0 1-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7 7 0 0 0 2.79-.588M5.21 3.088A7 7 0 0 1 8 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 0 0-4.474-4.474z"></path>
							<path d="M5.525 7.646a2.5 2.5 0 0 0 2.829 2.829zm4.95.708-2.829-2.83a2.5 2.5 0 0 1 2.829 2.829zm3.171 6-12-12 .708-.708 12 12z"></path>
						</svg>
					</button>
				</label>
				<div class="card-actions justify-end">
					<button
						class="rounded-none btn btn-primary"
					>
						Register
					</button>
				</div>
			</form>
		</div>
	</section>
}

templ RegisterIndex(v models.RegisterView, cmp templ.Component) {
	@layout.Base(v.BaseView) {
		@cmp
	}
}
