package pages

import (
    "fmt"
    "github.com/jaredfolkins/letemcook/models"
    "github.com/jaredfolkins/letemcook/views/layout"
)

templ SystemJobs(v models.SystemJobsView) {
    <div id="systemjobsnav" class="cookbooknav-attrs flex flex-col justify-end md:flex-row mx-12 mb-2">
        <div class="flex-1 flex items-center justify-start">
            <h1 class="text-2xl font-bold">System Jobs</h1>
        </div>
        <div class="flex flex-row gap-12 justify-end"></div>
    </div>
    <div id="systemjobs-content-box" class="bg-base-100 p-9 edges gap-12 mx-12 my-4">
        <div class="overflow-x-auto">
            <table class="table w-full">
                <thead><tr><th>ID</th><th>Recipe</th><th>User</th><th>Type</th><th>Status</th></tr></thead>
                <tbody>
                    for _, j := range v.Jobs {
                        <tr>
                            <td>{ j.ID }</td><td>{ j.RecipeName }</td><td>{ j.Username }</td><td>{ j.Type }</td><td>{ j.Status }</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        if v.TotalPages > 1 {
            <div class="flex justify-center items-center space-x-4 mt-8">
                if v.CurrentPage > 1 {
                    <a hx-get={ fmt.Sprintf("/lemc/system/jobs?page=%d&limit=%d&partial=true", v.CurrentPage-1, v.Limit) } hx-target="#app" hx-swap="innerHTML transition:true scroll:top" hx-push-url={ fmt.Sprintf("/lemc/system/jobs?page=%d&limit=%d", v.CurrentPage-1, v.Limit) } class="btn btn-sm btn-outline rounded-none">&lt;</a>
                } else {
                    <button class="btn btn-sm btn-outline rounded-none" disabled>&lt;</button>
                }
                <span class="text-sm">Page { fmt.Sprintf("%d", v.CurrentPage) } of { fmt.Sprintf("%d", v.TotalPages) }</span>
                if v.CurrentPage < v.TotalPages {
                    <a hx-get={ fmt.Sprintf("/lemc/system/jobs?page=%d&limit=%d&partial=true", v.CurrentPage+1, v.Limit) } hx-target="#app" hx-swap="innerHTML transition:true scroll:top" hx-push-url={ fmt.Sprintf("/lemc/system/jobs?page=%d&limit=%d", v.CurrentPage+1, v.Limit) } class="btn btn-sm btn-outline rounded-none">&gt;</a>
                } else {
                    <button class="btn btn-sm btn-outline rounded-none" disabled>&gt;</button>
                }
            </div>
        }
    </div>
}

templ SystemJobsIndex(v models.SystemJobsView, cmp templ.Component) {
    @layout.Base(v.BaseView) {
        @cmp
    }
}
